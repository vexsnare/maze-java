import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class PalindromePath {
	static int inf = (int) 1e9;

	public int shortestLength(int n, int[] a, int[] b, String c) {
		int[][] dp = new int[n][n];
		char[][] ar = new char[n][n];

		for (char[] t : ar)
			Arrays.fill(t, 'X');

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (i == j)
					dp[i][j] = 0;
				else {
					dp[i][j] = inf;
				}
			}
		}
		for (int i = 0; i < c.length(); i++) {
			ar[a[i]][b[i]] = c.charAt(i);
			ar[b[i]][a[i]] = c.charAt(i);
			dp[a[i]][b[i]] = 1;
			dp[b[i]][a[i]] = 1;
		}

		for (int ln = 2; ln < n * n; ln++) {
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {
					if (dp[i][j] != inf) {
						for (int x = 0; x < n; x++) {
							for (int y = 0; y < n; y++) {
								if (ar[x][i] != 'X' && ar[x][i] == ar[j][y])
									dp[x][y] = Math.min(dp[x][y], 2 + dp[i][j]);
							}
						}
					}
				}
			}
		}
		return dp[0][1] == inf ? -1 : dp[0][1];

	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, String p3, boolean hasAnswer,
			int p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + "\"" + p3 + "\"");
		System.out.println("]");
		PalindromePath obj;
		int answer;
		obj = new PalindromePath();
		long startTime = System.currentTimeMillis();
		answer = obj.shortestLength(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		int[] p1;
		int[] p2;
		String p3;
		int p4;

		// ----- test 0 -----
		p0 = 5;
		p1 = new int[] { 2, 2, 0, 3, 4 };
		p2 = new int[] { 0, 1, 3, 4, 1 };
		p3 = "abxyx";
		p4 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 5;
		p1 = new int[] { 2, 2, 0, 3, 4 };
		p2 = new int[] { 0, 1, 3, 4, 1 };
		p3 = "abxyz";
		p4 = -1;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 7;
		p1 = new int[] { 0, 0, 3, 4, 5, 6 };
		p2 = new int[] { 2, 3, 4, 5, 6, 1 };
		p3 = "abaaaa";
		p4 = 9;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 6;
		p1 = new int[] { 0, 0, 3, 4, 5 };
		p2 = new int[] { 2, 3, 4, 5, 1 };
		p3 = "abaaa";
		p4 = -1;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 2;
		p1 = new int[] { 0 };
		p2 = new int[] { 1 };
		p3 = "x";
		p4 = 1;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = 20;
		p1 = new int[] { 18 };
		p2 = new int[] { 19 };
		p3 = "z";
		p4 = -1;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
