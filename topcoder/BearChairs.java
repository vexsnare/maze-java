import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class BearChairs {
	public int[] findPositions(int[] atLeast, int d) {
		int[] ans = new int[atLeast.length];
		ArrayList<Integer> pos = new ArrayList<>();
		pos.add(atLeast[0]);
		int size = 0;
		ans[size++] = atLeast[0];
		for (int i = 1; i < atLeast.length; i++) {
			boolean added = false;
			int seat = 0;
			if (atLeast[i] + d <= pos.get(0)) {
				seat = Math.min(atLeast[i], atLeast[i] + d);
				pos.add(0, seat);
				ans[size++] = seat;
				continue;

			}
			// ListIterator litr = pos.listIterator();
			for (int j = 0; j < pos.size() - 1; j++) {
				int current = pos.get(j);
				int next = pos.get(j + 1);
				seat = Math.max(current + d, atLeast[i]);
				if (next - seat >= d) {
					added = true;
					pos.add(j + 1, seat);
					ans[size++] = seat;
					break;
				}
			}
			if (added == false) {
				seat = Math.max(pos.get(pos.size() - 1) + d, atLeast[i]);
				pos.add(seat);

				ans[size++] = seat;
			}
		}
		return ans;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		BearChairs obj;
		int[] answer;
		obj = new BearChairs();
		long startTime = System.currentTimeMillis();
		answer = obj.findPositions(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int p1;
		int[] p2;

		// ----- test 0 -----
		p0 = new int[] { 1, 21, 11, 7 };
		p1 = 10;
		p2 = new int[] { 1, 21, 11, 31 };
		// all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 1, 21, 11, 7 };
		p1 = 11;
		p2 = new int[] { 1, 21, 32, 43 };
		// all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 1000000, 1000000, 1000000, 1 };
		p1 = 1000000;
		p2 = new int[] { 1000000, 2000000, 3000000, 4000000 };
		// all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 8, 7, 5, 1 };
		p1 = 1;
		p2 = new int[] { 8, 7, 5, 1 };
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
